--- draft-ietf-httpbis-cache-latest.txt	2022-01-22 17:17:33.510536700 +0100
+++ rfc9111-to-be.txt	2022-01-25 11:29:27.521324800 +0100
@@ -2,17 +2,16 @@
 
 
 
-HTTP Working Group                                      R. Fielding, Ed.
-Internet-Draft                                                     Adobe
-Obsoletes: 7234 (if approved)                         M. Nottingham, Ed.
-Intended status: Standards Track                                  Fastly
-Expires: 26 July 2022                                    J. Reschke, Ed.
-                                                              greenbytes
-                                                         22 January 2022
+Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
+Request for Comments: 9111                                         Adobe
+STD: 97                                               M. Nottingham, Ed.
+Obsoletes: 7234                                                   Fastly
+Category: Standards Track                                J. Reschke, Ed.
+ISSN: 2070-1721                                               greenbytes
+                                                            January 2022
 
 
                               HTTP Caching
-                    draft-ietf-httpbis-cache-latest
 
 Abstract
 
@@ -24,36 +23,19 @@
 
    This document obsoletes RFC 7234.
 
-Editorial Note
-
-   This note is to be removed before publishing as an RFC.
-
-   Discussion of this draft takes place on the HTTP working group
-   mailing list (ietf-http-wg@w3.org), which is archived at
-   <https://lists.w3.org/Archives/Public/ietf-http-wg/>.
-
-   Working Group information can be found at <https://httpwg.org/>;
-   source code and issues list for this draft can be found at
-   <https://github.com/httpwg/http-core>.
-
-   The changes in this draft are summarized in Appendix C.1.
-
 Status of This Memo
 
-   This Internet-Draft is submitted in full conformance with the
-   provisions of BCP 78 and BCP 79.
-
-   Internet-Drafts are working documents of the Internet Engineering
-   Task Force (IETF).  Note that other groups may also distribute
-   working documents as Internet-Drafts.  The list of current Internet-
-   Drafts is at https://datatracker.ietf.org/drafts/current/.
-
-   Internet-Drafts are draft documents valid for a maximum of six months
-   and may be updated, replaced, or obsoleted by other documents at any
-   time.  It is inappropriate to use Internet-Drafts as reference
-   material or to cite them other than as "work in progress."
+   This is an Internet Standards Track document.
 
-   This Internet-Draft will expire on 26 July 2022.
+   This document is a product of the Internet Engineering Task Force
+   (IETF).  It represents the consensus of the IETF community.  It has
+   received public review and has been approved for publication by the
+   Internet Engineering Steering Group (IESG).  Further information on
+   Internet Standards is available in Section 2 of RFC 7841.
+
+   Information about the current status of this document, any errata,
+   and how to provide feedback on it may be obtained at
+   https://www.rfc-editor.org/info/rfc9111.
 
 Copyright Notice
 
@@ -61,13 +43,14 @@
    document authors.  All rights reserved.
 
    This document is subject to BCP 78 and the IETF Trust's Legal
-   Provisions Relating to IETF Documents (https://trustee.ietf.org/
-   license-info) in effect on the date of publication of this document.
-   Please review these documents carefully, as they describe your rights
-   and restrictions with respect to this document.  Code Components
-   extracted from this document must include Revised BSD License text as
-   described in Section 4.e of the Trust Legal Provisions and are
-   provided without warranty as described in the Revised BSD License.
+   Provisions Relating to IETF Documents
+   (https://trustee.ietf.org/license-info) in effect on the date of
+   publication of this document.  Please review these documents
+   carefully, as they describe your rights and restrictions with respect
+   to this document.  Code Components extracted from this document must
+   include Revised BSD License text as described in Section 4.e of the
+   Trust Legal Provisions and are provided without warranty as described
+   in the Revised BSD License.
 
    This document may contain material from IETF Documents or IETF
    Contributions published or made publicly available before November
@@ -150,8 +133,6 @@
      9.2.  Informative References
    Appendix A.  Collected ABNF
    Appendix B.  Changes from RFC 7234
-   Appendix C.  Change Log
-     C.1.  Since draft-ietf-httpbis-cache-19
    Acknowledgements
    Index
    Authors' Addresses
@@ -196,8 +177,8 @@
 
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
-   "OPTIONAL" in this document are to be interpreted as described in BCP
-   14 [RFC2119] [RFC8174] when, and only when, they appear in all
+   "OPTIONAL" in this document are to be interpreted as described in
+   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
    capitals, as shown here.
 
    Section 2 of [HTTP] defines conformance criteria and contains
@@ -306,11 +287,11 @@
 
    *  the response status code is final (see Section 15 of [HTTP]);
 
-   *  if the response status code is 206 or 304, or the "must-
-      understand" cache directive (see Section 5.2.2.3) is present: the
-      cache understands the response status code;
+   *  if the response status code is 206 or 304, or the must-understand
+      cache directive (see Section 5.2.2.3) is present: the cache
+      understands the response status code;
 
-   *  the "no-store" cache directive is not present in the response (see
+   *  the no-store cache directive is not present in the response (see
       Section 5.2.2.5);
 
    *  if the cache is shared: the "private" response directive is either
@@ -331,9 +312,9 @@
 
       -  an Expires header field (see Section 5.3);
 
-      -  a "max-age" response directive (see Section 5.2.2.1);
+      -  a max-age response directive (see Section 5.2.2.1);
 
-      -  if the cache is shared: an "s-maxage" response directive (see
+      -  if the cache is shared: an s-maxage response directive (see
          Section 5.2.2.10);
 
       -  a cache extension that allows it to be cached (see
@@ -370,8 +351,8 @@
       forwarding the message, and this MAY be implemented by doing so
       before storage; see Section 7.6.1 of [HTTP] for some examples.
 
-   *  The "no-cache" (Section 5.2.2.4) and private (Section 5.2.2.7)
-      cache directives can have arguments that prevent storage of header
+   *  The no-cache (Section 5.2.2.4) and private (Section 5.2.2.7) cache
+      directives can have arguments that prevent storage of header
       fields by all caches and shared caches, respectively.
 
    *  Header fields that are specific to the proxy that a cache uses
@@ -717,7 +698,7 @@
    responses without explicit freshness whose status codes are defined
    as _heuristically cacheable_ (e.g., see Section 15.1 of [HTTP]) and
    on responses without explicit freshness that have been marked as
-   explicitly cacheable (e.g., with a "public" response directive).
+   explicitly cacheable (e.g., with a public response directive).
 
    Note that in previous specifications, heuristically cacheable
    response status codes were called "cacheable by default".
@@ -807,10 +788,9 @@
    according to the calculations in Section 4.2.
 
    A cache MUST NOT generate a stale response if it is prohibited by an
-   explicit in-protocol directive (e.g., by a "no-cache" response
-   directive, a "must-revalidate" response directive, or an applicable
-   "s-maxage" or "proxy-revalidate" response directive; see
-   Section 5.2.2).
+   explicit in-protocol directive (e.g., by a no-cache response
+   directive, a must-revalidate response directive, or an applicable
+   s-maxage or proxy-revalidate response directive; see Section 5.2.2).
 
    A cache MUST NOT generate a stale response unless it is disconnected
    or doing so is explicitly permitted by the client or origin server
@@ -1137,9 +1117,9 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
-   The "max-age" request directive indicates that the client prefers a
+   The max-age request directive indicates that the client prefers a
    response whose age is less than or equal to the specified number of
    seconds.  Unless the max-stale request directive is also present, the
    client does not wish to receive a stale response.
@@ -1152,14 +1132,14 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
-   The "max-stale" request directive indicates that the client will
-   accept a response that has exceeded its freshness lifetime.  If a
-   value is present, then the client is willing to accept a response
-   that has exceeded its freshness lifetime by no more than the
-   specified number of seconds.  If no value is assigned to max-stale,
-   then the client will accept a stale response of any age.
+   The max-stale request directive indicates that the client will accept
+   a response that has exceeded its freshness lifetime.  If a value is
+   present, then the client is willing to accept a response that has
+   exceeded its freshness lifetime by no more than the specified number
+   of seconds.  If no value is assigned to max-stale, then the client
+   will accept a stale response of any age.
 
    This directive uses the token form of the argument syntax: e.g.,
    'max-stale=10' not 'max-stale="10"'.  A sender MUST NOT generate the
@@ -1169,9 +1149,9 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
-   The "min-fresh" request directive indicates that the client prefers a
+   The min-fresh request directive indicates that the client prefers a
    response whose freshness lifetime is no less than its current age
    plus the specified time in seconds.  That is, the client wants a
    response that will still be fresh for at least the specified number
@@ -1183,14 +1163,14 @@
 
 5.2.1.4.  no-cache
 
-   The "no-cache" request directive indicates that the client prefers a
+   The no-cache request directive indicates that the client prefers a
    stored response not be used to satisfy the request without successful
    validation on the origin server.
 
 5.2.1.5.  no-store
 
-   The "no-store" request directive indicates that a cache MUST NOT
-   store any part of either this request or any response to it.  This
+   The no-store request directive indicates that a cache MUST NOT store
+   any part of either this request or any response to it.  This
    directive applies to both private and shared caches.  "MUST NOT
    store" in this context means that the cache MUST NOT intentionally
    store the information in non-volatile storage and MUST make a best-
@@ -1208,13 +1188,13 @@
 
 5.2.1.6.  no-transform
 
-   The "no-transform" request directive indicates that the client is
+   The no-transform request directive indicates that the client is
    asking for intermediaries to avoid transforming the content, as
    defined in Section 7.7 of [HTTP].
 
 5.2.1.7.  only-if-cached
 
-   The "only-if-cached" request directive indicates that the client only
+   The only-if-cached request directive indicates that the client only
    wishes to obtain a stored response.  Caches that honor this request
    directive SHOULD, upon receiving it, respond with either a stored
    response consistent with the other constraints of the request or a
@@ -1229,9 +1209,9 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
-   The "max-age" response directive indicates that the response is to be
+   The max-age response directive indicates that the response is to be
    considered stale after its age is greater than the specified number
    of seconds.
 
@@ -1241,7 +1221,7 @@
 
 5.2.2.2.  must-revalidate
 
-   The "must-revalidate" response directive indicates that once the
+   The must-revalidate response directive indicates that once the
    response has become stale, a cache MUST NOT reuse that response to
    satisfy another request until it has been successfully validated by
    the origin, as defined by Section 4.3.
@@ -1265,9 +1245,9 @@
 
 5.2.2.3.  must-understand
 
-   The "must-understand" response directive limits caching of the
-   response to a cache that understands and conforms to the requirements
-   for that response's status code.
+   The must-understand response directive limits caching of the response
+   to a cache that understands and conforms to the requirements for that
+   response's status code.
 
    A response that contains the must-understand directive SHOULD also
    contain the no-store directive.  When a cache that implements the
@@ -1279,10 +1259,10 @@
 
    Argument syntax:
 
-      #field-name
+         #field-name
 
-   The "no-cache" response directive, in its unqualified form (without
-   an argument), indicates that the response MUST NOT be used to satisfy
+   The no-cache response directive, in its unqualified form (without an
+   argument), indicates that the response MUST NOT be used to satisfy
    any other request without forwarding it for validation and receiving
    a successful response; see Section 4.3.
 
@@ -1314,9 +1294,9 @@
 
 5.2.2.5.  no-store
 
-   The "no-store" response directive indicates that a cache MUST NOT
-   store any part of either the immediate request or the response and
-   MUST NOT use the response to satisfy any other request.
+   The no-store response directive indicates that a cache MUST NOT store
+   any part of either the immediate request or the response and MUST NOT
+   use the response to satisfy any other request.
 
    This directive applies to both private and shared caches.  "MUST NOT
    store" in this context means that the cache MUST NOT intentionally
@@ -1334,7 +1314,7 @@
 
 5.2.2.6.  no-transform
 
-   The "no-transform" response directive indicates that an intermediary
+   The no-transform response directive indicates that an intermediary
    (regardless of whether it implements a cache) MUST NOT transform the
    content, as defined in Section 7.7 of [HTTP].
 
@@ -1342,7 +1322,7 @@
 
    Argument syntax:
 
-      #field-name
+         #field-name
 
    The unqualified "private" response directive indicates that a shared
    cache MUST NOT store the response (i.e., the response is intended for
@@ -1374,7 +1354,7 @@
 
 5.2.2.8.  proxy-revalidate
 
-   The "proxy-revalidate" response directive indicates that once the
+   The proxy-revalidate response directive indicates that once the
    response has become stale, a shared cache MUST NOT reuse that
    response to satisfy another request until it has been successfully
    validated by the origin, as defined by Section 4.3.  This is
@@ -1405,19 +1385,19 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
-   The "s-maxage" response directive indicates that, for a shared cache,
+   The s-maxage response directive indicates that, for a shared cache,
    the maximum age specified by this directive overrides the maximum age
    specified by either the max-age directive or the Expires header
    field.
 
-   The s-maxage directive incorporates the semantics of the proxy-
-   revalidate response directive (Section 5.2.2.8) for a shared cache.
-   A shared cache MUST NOT reuse a stale response with s-maxage to
-   satisfy another request until it has been successfully validated by
-   the origin, as defined by Section 4.3.  This directive also permits a
-   shared cache to reuse a response to a request containing an
+   The s-maxage directive incorporates the semantics of the
+   proxy-revalidate response directive (Section 5.2.2.8) for a shared
+   cache.  A shared cache MUST NOT reuse a stale response with s-maxage
+   to satisfy another request until it has been successfully validated
+   by the origin, as defined by Section 4.3.  This directive also
+   permits a shared cache to reuse a response to a request containing an
    Authorization header field, subject to the above requirements on
    maximum age and revalidation (Section 3.5).
 
@@ -1733,10 +1713,8 @@
 9.1.  Normative References
 
    [HTTP]     Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
-              Ed., "HTTP Semantics", Work in Progress, Internet-Draft,
-              draft-ietf-httpbis-semantics-latest, January 2022,
-              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
-              semantics-latest>.
+              Ed., "HTTP Semantics", RFC 9110, DOI 10.17487/RFC9110,
+              January 2022, <https://www.rfc-editor.org/info/rfc9110>.
 
    [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
               Requirement Levels", BCP 14, RFC 2119,
@@ -1763,10 +1741,8 @@
               <https://www.rfc-editor.org/info/rfc6265>.
 
    [HTTP/1.1] Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
-              Ed., "HTTP/1.1", Work in Progress, Internet-Draft, draft-
-              ietf-httpbis-messaging-latest, January 2022,
-              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
-              messaging-latest>.
+              Ed., "HTTP/1.1", RFC 9112, DOI 10.17487/RFC9112, January
+              2022, <https://www.rfc-editor.org/info/rfc9112>.
 
    [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,
               Masinter, L., Leach, P., and T. Berners-Lee, "Hypertext
@@ -1790,7 +1766,7 @@
 
 Appendix A.  Collected ABNF
 
-   In the collected ABNF below, list rules are expanded per
+   In the collected ABNF below, list rules are expanded as per
    Section 5.6.1 of [HTTP].
 
    Age = delta-seconds
@@ -1836,11 +1812,10 @@
    accept both token and quoted-string forms, but they still need to
    parse them properly for unknown extensions.  (Section 5.2)
 
-   The "public" and "private" cache directives were clarified, so that
-   they do not make responses reusable under any condition.
-   (Section 5.2.2)
+   The public and private cache directives were clarified, so that they
+   do not make responses reusable under any condition.  (Section 5.2.2)
 
-   The "must-understand" cache directive was introduced; caches are no
+   The must-understand cache directive was introduced; caches are no
    longer required to understand the semantics of new response status
    codes unless it is present.  (Section 5.2.2.3)
 
@@ -1850,20 +1825,6 @@
    entirely advisory.  In practice, Warning was not added by caches or
    intermediaries.  (Section 5.5)
 
-Appendix C.  Change Log
-
-   This section is to be removed before publishing as an RFC.
-
-   See <https://www.ietf.org/archive/id/draft-ietf-httpbis-cache-
-   19.html#appendix-C> for changes up to version 19 of this document.
-
-C.1.  Since draft-ietf-httpbis-cache-19
-
-   This (unpublished) draft contains changes that were made after draft
-   19 was approved by the IESG.  Most changes are editorial only.
-
-   *  None.
-
 Acknowledgements
 
    See Appendix "Acknowledgements" of [HTTP], which applies to this
