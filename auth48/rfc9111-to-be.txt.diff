--- draft-ietf-httpbis-cache-latest.txt	2022-02-07 09:40:21.422074500 +0100
+++ rfc9111-to-be.txt	2022-02-07 09:40:18.934964800 +0100
@@ -2,17 +2,16 @@
 
 
 
-HTTP Working Group                                      R. Fielding, Ed.
-Internet-Draft                                                     Adobe
-Obsoletes: 7234 (if approved)                         M. Nottingham, Ed.
-Intended status: Standards Track                                  Fastly
-Expires: 11 August 2022                                  J. Reschke, Ed.
-                                                              greenbytes
-                                                         7 February 2022
+Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
+Request for Comments: 9111                                         Adobe
+STD: 97                                               M. Nottingham, Ed.
+Obsoletes: 7234                                                   Fastly
+Category: Standards Track                                J. Reschke, Ed.
+ISSN: 2070-1721                                               greenbytes
+                                                            January 2022
 
 
                               HTTP Caching
-                    draft-ietf-httpbis-cache-latest
 
 Abstract
 
@@ -24,36 +23,19 @@
 
    This document obsoletes RFC 7234.
 
-Editorial Note
-
-   This note is to be removed before publishing as an RFC.
-
-   Discussion of this draft takes place on the HTTP working group
-   mailing list (ietf-http-wg@w3.org), which is archived at
-   <https://lists.w3.org/Archives/Public/ietf-http-wg/>.
-
-   Working Group information can be found at <https://httpwg.org/>;
-   source code and issues list for this draft can be found at
-   <https://github.com/httpwg/http-core>.
-
-   The changes in this draft are summarized in Appendix C.1.
-
 Status of This Memo
 
-   This Internet-Draft is submitted in full conformance with the
-   provisions of BCP 78 and BCP 79.
-
-   Internet-Drafts are working documents of the Internet Engineering
-   Task Force (IETF).  Note that other groups may also distribute
-   working documents as Internet-Drafts.  The list of current Internet-
-   Drafts is at https://datatracker.ietf.org/drafts/current/.
-
-   Internet-Drafts are draft documents valid for a maximum of six months
-   and may be updated, replaced, or obsoleted by other documents at any
-   time.  It is inappropriate to use Internet-Drafts as reference
-   material or to cite them other than as "work in progress."
+   This is an Internet Standards Track document.
 
-   This Internet-Draft will expire on 11 August 2022.
+   This document is a product of the Internet Engineering Task Force
+   (IETF).  It represents the consensus of the IETF community.  It has
+   received public review and has been approved for publication by the
+   Internet Engineering Steering Group (IESG).  Further information on
+   Internet Standards is available in Section 2 of RFC 7841.
+
+   Information about the current status of this document, any errata,
+   and how to provide feedback on it may be obtained at
+   https://www.rfc-editor.org/info/rfc9111.
 
 Copyright Notice
 
@@ -61,13 +43,14 @@
    document authors.  All rights reserved.
 
    This document is subject to BCP 78 and the IETF Trust's Legal
-   Provisions Relating to IETF Documents (https://trustee.ietf.org/
-   license-info) in effect on the date of publication of this document.
-   Please review these documents carefully, as they describe your rights
-   and restrictions with respect to this document.  Code Components
-   extracted from this document must include Revised BSD License text as
-   described in Section 4.e of the Trust Legal Provisions and are
-   provided without warranty as described in the Revised BSD License.
+   Provisions Relating to IETF Documents
+   (https://trustee.ietf.org/license-info) in effect on the date of
+   publication of this document.  Please review these documents
+   carefully, as they describe your rights and restrictions with respect
+   to this document.  Code Components extracted from this document must
+   include Revised BSD License text as described in Section 4.e of the
+   Trust Legal Provisions and are provided without warranty as described
+   in the Revised BSD License.
 
    This document may contain material from IETF Documents or IETF
    Contributions published or made publicly available before November
@@ -150,8 +133,6 @@
      9.2.  Informative References
    Appendix A.  Collected ABNF
    Appendix B.  Changes from RFC 7234
-   Appendix C.  Change Log
-     C.1.  Since draft-ietf-httpbis-cache-19
    Acknowledgements
    Index
    Authors' Addresses
@@ -166,16 +147,16 @@
    performance.  This document defines aspects of HTTP related to
    caching and reusing response messages.
 
-   An HTTP "cache" is a local store of response messages and the
+   An HTTP _cache_ is a local store of response messages and the
    subsystem that controls storage, retrieval, and deletion of messages
    in it.  A cache stores cacheable responses to reduce the response
    time and network bandwidth consumption on future equivalent requests.
    Any client or server MAY use a cache, though not when acting as a
    tunnel (Section 3.7 of [HTTP]).
 
-   A "shared cache" is a cache that stores responses for reuse by more
+   A _shared cache_ is a cache that stores responses for reuse by more
    than one user; shared caches are usually (but not always) deployed as
-   a part of an intermediary.  A "private cache", in contrast, is
+   a part of an intermediary.  A _private cache_, in contrast, is
    dedicated to a single user; often, they are deployed as a component
    of a user agent.
 
@@ -196,8 +177,8 @@
 
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
-   "OPTIONAL" in this document are to be interpreted as described in BCP
-   14 [RFC2119] [RFC8174] when, and only when, they appear in all
+   "OPTIONAL" in this document are to be interpreted as described in
+   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
    capitals, as shown here.
 
    Section 2 of [HTTP] defines conformance criteria and contains
@@ -267,7 +248,7 @@
    response or reusing a stored response inappropriately, rather than
    mandating that caches always store and reuse particular responses.
 
-   The "cache key" is the information a cache uses to choose a response
+   The _cache key_ is the information a cache uses to choose a response
    and is composed from, at a minimum, the request method and target URI
    used to retrieve the stored response; the method determines under
    which circumstances that response can be used to satisfy a subsequent
@@ -294,7 +275,7 @@
    definition allows such caching and defines something suitable for use
    as a cache key.
 
-   A cache is "disconnected" when it cannot contact the origin server or
+   A cache is _disconnected_ when it cannot contact the origin server or
    otherwise find a forward path for a request.  A disconnected cache
    can serve stale responses in some circumstances (Section 4.2.4).
 
@@ -526,8 +507,8 @@
 
    A cache can use a response that is stored or storable to satisfy
    multiple requests, provided that it is allowed to reuse that response
-   for the requests in question.  This enables a cache to "collapse
-   requests" -- or combine multiple incoming requests into a single
+   for the requests in question.  This enables a cache to _collapse
+   requests_ -- or combine multiple incoming requests into a single
    forward request upon a cache miss -- thereby reducing load on the
    origin server and network.  Note, however, that if the cache cannot
    use the returned response for some or all of the collapsed requests,
@@ -599,18 +580,18 @@
 
 4.2.  Freshness
 
-   A "fresh" response is one whose age has not yet exceeded its
-   freshness lifetime.  Conversely, a "stale" response is one where it
+   A _fresh_ response is one whose age has not yet exceeded its
+   freshness lifetime.  Conversely, a _stale_ response is one where it
    has.
 
-   A response's "freshness lifetime" is the length of time between its
+   A response's _freshness lifetime_ is the length of time between its
    generation by the origin server and its expiration time.  An
-   "explicit expiration time" is the time at which the origin server
+   _explicit expiration time_ is the time at which the origin server
    intends that a stored response can no longer be used by a cache
-   without further validation, whereas a "heuristic expiration time" is
+   without further validation, whereas a _heuristic expiration time_ is
    assigned by a cache when no explicit expiration time is available.
 
-   A response's "age" is the time that has passed since it was generated
+   A response's _age_ is the time that has passed since it was generated
    by, or successfully validated with, the origin server.
 
    When a response is fresh, it can be used to satisfy subsequent
@@ -715,7 +696,7 @@
    explicit expiration time is present in the stored response.  Because
    of the requirements in Section 3, heuristics can only be used on
    responses without explicit freshness whose status codes are defined
-   as "heuristically cacheable" (e.g., see Section 15.1 of [HTTP]) and
+   as _heuristically cacheable_ (e.g., see Section 15.1 of [HTTP]) and
    on responses without explicit freshness that have been marked as
    explicitly cacheable (e.g., with a public response directive).
 
@@ -747,26 +728,26 @@
 
    Age calculation uses the following data:
 
-   "age_value"
+   _age_value_
       The term "age_value" denotes the value of the Age header field
       (Section 5.1), in a form appropriate for arithmetic operation; or
       0, if not available.
 
-   "date_value"
+   _date_value_
       The term "date_value" denotes the value of the Date header field,
       in a form appropriate for arithmetic operations.  See
       Section 6.6.1 of [HTTP] for the definition of the Date header
       field and for requirements regarding responses without it.
 
-   "now"
+   _now_
       The term "now" means the current value of this implementation's
       clock (Section 5.6.7 of [HTTP]).
 
-   "request_time"
+   _request_time_
       The value of the clock at the time of the request that resulted in
       the stored response.
 
-   "response_time"
+   _response_time_
       The value of the clock at the time the response was received.
 
    A response's age can be calculated in two entirely independent ways:
@@ -826,7 +807,7 @@
    give the next inbound server an opportunity to choose a valid stored
    response to use, updating the stored metadata in the process, or to
    replace the stored response(s) with a new response.  This process is
-   known as "validating" or "revalidating" the stored response.
+   known as _validating_ or _revalidating_ the stored response.
 
 4.3.1.  Sending a Validation Request
 
@@ -981,7 +962,7 @@
    Then, that initial set of stored responses is further filtered by the
    first match of:
 
-   *  If the new response contains one or more "strong validators" (see
+   *  If the new response contains one or more _strong validators_ (see
       Section 8.8.1 of [HTTP]), then each of those strong validators
       identifies a selected representation for update.  All the stored
       responses in the initial set with one of those same strong
@@ -991,7 +972,7 @@
       responses.
 
    *  If the new response contains no strong validators but does contain
-      one or more "weak validators", and those validators correspond to
+      one or more _weak validators_, and those validators correspond to
       one of the initial set's stored responses, then the most recent of
       those matching stored responses is identified for update.
 
@@ -1055,7 +1036,7 @@
    URI (Section 7.1 of [HTTP]).  This helps prevent denial-of-service
    attacks.
 
-   "Invalidate" means that the cache will either remove all stored
+   _Invalidate_ means that the cache will either remove all stored
    responses whose target URI matches the given URI or mark them as
    "invalid" and in need of a mandatory validation before they can be
    sent in response to a subsequent request.
@@ -1136,7 +1117,7 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
    The max-age request directive indicates that the client prefers a
    response whose age is less than or equal to the specified number of
@@ -1151,7 +1132,7 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
    The max-stale request directive indicates that the client will accept
    a response that has exceeded its freshness lifetime.  If a value is
@@ -1168,7 +1149,7 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
    The min-fresh request directive indicates that the client prefers a
    response whose freshness lifetime is no less than its current age
@@ -1196,10 +1177,10 @@
    effort attempt to remove the information from volatile storage as
    promptly as possible after forwarding it.
 
-   This directive is not a reliable or sufficient mechanism for ensuring
-   privacy.  In particular, malicious or compromised caches might not
-   recognize or obey this directive, and communications networks might
-   be vulnerable to eavesdropping.
+   This directive is _not_ a reliable or sufficient mechanism for
+   ensuring privacy.  In particular, malicious or compromised caches
+   might not recognize or obey this directive, and communications
+   networks might be vulnerable to eavesdropping.
 
    Note that if a request containing this directive is satisfied from a
    cache, the no-store request directive does not apply to the already
@@ -1228,7 +1209,7 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
    The max-age response directive indicates that the response is to be
    considered stale after its age is greater than the specified number
@@ -1278,7 +1259,7 @@
 
    Argument syntax:
 
-      #field-name
+         #field-name
 
    The no-cache response directive, in its unqualified form (without an
    argument), indicates that the response MUST NOT be used to satisfy
@@ -1323,10 +1304,10 @@
    effort attempt to remove the information from volatile storage as
    promptly as possible after forwarding it.
 
-   This directive is not a reliable or sufficient mechanism for ensuring
-   privacy.  In particular, malicious or compromised caches might not
-   recognize or obey this directive, and communications networks might
-   be vulnerable to eavesdropping.
+   This directive is _not_ a reliable or sufficient mechanism for
+   ensuring privacy.  In particular, malicious or compromised caches
+   might not recognize or obey this directive, and communications
+   networks might be vulnerable to eavesdropping.
 
    Note that the must-understand cache directive overrides no-store in
    certain circumstances; see Section 5.2.2.3.
@@ -1341,7 +1322,7 @@
 
    Argument syntax:
 
-      #field-name
+         #field-name
 
    The unqualified private response directive indicates that a shared
    cache MUST NOT store the response (i.e., the response is intended for
@@ -1404,19 +1385,19 @@
 
    Argument syntax:
 
-      delta-seconds (see Section 1.2.2)
+         delta-seconds (see Section 1.2.2)
 
    The s-maxage response directive indicates that, for a shared cache,
    the maximum age specified by this directive overrides the maximum age
    specified by either the max-age directive or the Expires header
    field.
 
-   The s-maxage directive incorporates the semantics of the proxy-
-   revalidate response directive (Section 5.2.2.8) for a shared cache.
-   A shared cache MUST NOT reuse a stale response with s-maxage to
-   satisfy another request until it has been successfully validated by
-   the origin, as defined by Section 4.3.  This directive also permits a
-   shared cache to reuse a response to a request containing an
+   The s-maxage directive incorporates the semantics of the
+   proxy-revalidate response directive (Section 5.2.2.8) for a shared
+   cache.  A shared cache MUST NOT reuse a stale response with s-maxage
+   to satisfy another request until it has been successfully validated
+   by the origin, as defined by Section 4.3.  This directive also
+   permits a shared cache to reuse a response to a request containing an
    Authorization header field, subject to the above requirements on
    maximum age and revalidation (Section 3.5).
 
@@ -1732,10 +1713,8 @@
 9.1.  Normative References
 
    [HTTP]     Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
-              Ed., "HTTP Semantics", Work in Progress, Internet-Draft,
-              draft-ietf-httpbis-semantics-latest, February 2022,
-              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
-              semantics-latest>.
+              Ed., "HTTP Semantics", RFC 9110, DOI 10.17487/RFC9110,
+              January 2022, <https://www.rfc-editor.org/info/rfc9110>.
 
    [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
               Requirement Levels", BCP 14, RFC 2119,
@@ -1762,10 +1741,8 @@
               <https://www.rfc-editor.org/info/rfc6265>.
 
    [HTTP/1.1] Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
-              Ed., "HTTP/1.1", Work in Progress, Internet-Draft, draft-
-              ietf-httpbis-messaging-latest, February 2022,
-              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
-              messaging-latest>.
+              Ed., "HTTP/1.1", RFC 9112, DOI 10.17487/RFC9112, January
+              2022, <https://www.rfc-editor.org/info/rfc9112>.
 
    [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,
               Masinter, L., Leach, P., and T. Berners-Lee, "Hypertext
@@ -1789,7 +1766,7 @@
 
 Appendix A.  Collected ABNF
 
-   In the collected ABNF below, list rules are expanded per
+   In the collected ABNF below, list rules are expanded as per
    Section 5.6.1 of [HTTP].
 
    Age = delta-seconds
@@ -1848,20 +1825,6 @@
    entirely advisory.  In practice, Warning was not added by caches or
    intermediaries.  (Section 5.5)
 
-Appendix C.  Change Log
-
-   This section is to be removed before publishing as an RFC.
-
-   See <https://www.ietf.org/archive/id/draft-ietf-httpbis-cache-
-   19.html#appendix-C> for changes up to version 19 of this document.
-
-C.1.  Since draft-ietf-httpbis-cache-19
-
-   This (unpublished) draft contains changes that were made after draft
-   19 was approved by the IESG.  Most changes are editorial only.
-
-   *  None.
-
 Acknowledgements
 
    See Appendix "Acknowledgements" of [HTTP], which applies to this
